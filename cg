#include <unistd.h>
#include <fcntl.h>
#include <stdlib.h>
#include <stdio.h>
#include "get_next_line.h"

int get_check(char *str)
{
    int i = 0;
    if (!str)
        return (0);
    while (str[i])
    {
        if (str[i] == '\n')
            return (1);
        i++;
    }
    return (0);
}

int ft_strlen(char *str)
{
    int i = 0;
    if (!str)
        return (0);
    while (str[i])
        i++;
    return (i);
}

char *get_calloc(int size)
{
    int i = 0;
    char *ret = malloc(size + 1);
    if (!ret)
        return (NULL);
    while (i < size)
    {
        ret[i] = '\0';
        i++;
    }
    ret[i] = '\0';
    return (ret);
}

int get_ready(char **keep, char **ret, int fd)
{
    if (BUFFER_SIZE <= 0 || fd < 0)
        return (0);
    if (*keep)
    {
        *ret = get_calloc(BUFFER_SIZE);
        if (!*ret)
            return (free(*keep), 0);
    }
    else
    {
        *keep = get_calloc(BUFFER_SIZE);
        if (!*keep)
            return (0);
        *ret = get_calloc(BUFFER_SIZE);
        if (!*ret)
            return (free(*keep), 0);
    }
    return (1);
}

void ft_strchr(char *str, char c, char **keep)
{
    int i = 0, j = 0;
    char *freed = *keep;
    char *ret;

    while (str[i] && str[i] != c)
        i++;
    ret = get_calloc(i + 1);
    if (!ret)
        return;
    while (j < i)
    {
        ret[j] = str[j];
        j++;
    }
    ret[j] = '\0';
    free(freed);
    *keep = ret;
}

char *get_keep(char *keep)
{
    while (*keep && *keep != '\n')
        keep++;
    if (*keep == '\n')
        keep++;
    return (keep);
}

char *get_join(char *s1, char *s2)
{
    int sl1 = ft_strlen(s1), sl2 = ft_strlen(s2), i = 0, j = 0;
    char *ret = get_calloc(sl1 + sl2 + 1);
    if (!ret)
        return (NULL);
    while (i < sl1)
    {
        ret[i] = s1[i];
        i++;
    }
    while (j < sl2)
    {
        ret[i + j] = s2[j];
        j++;
    }
    ret[i + j] = '\0';
    free(s1);
    return (ret);
}

void get_the_line(char **keep, char **ret, int *bytes, int fd)
{
    while (*bytes > 0 && get_check(*keep) == 0)
    {
        *keep = get_join(*keep, *ret);
        if (get_check(*keep) == 0)
        {
            *bytes = read(fd, *ret, BUFFER_SIZE);
            if (*bytes < 0)
            {
                free(*ret);
                return;
            }
            (*ret)[*bytes] = '\0';
        }
    }
}

char *get_next_line(int fd)
{
    static char *keep;
    char *ret = NULL;
    int bytes;

    if (fd < 0 || read(fd, 0, 0) < 0 || get_ready(&keep, &ret, fd) == 0)
        return (NULL);
    if (get_check(keep) == 1)
    {
        ft_strchr(keep, '\n', &ret);
        keep = get_keep(keep);
        return (ret);
    }
    bytes = read(fd, ret, BUFFER_SIZE);
    if (bytes <= 0)
    {
        free(ret);
        return (NULL);
    }
    ret[bytes] = '\0';
    get_the_line(&keep, &ret, &bytes, fd);
    ft_strchr(keep, '\n', &ret);
    keep = get_keep(keep);
    return (ret);
}
